<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:injector="clr-namespace:SnowyRiver.WPF.Controls.Injector"
    xmlns:math="http://hexinnovation.com/math">
    <Style TargetType="{x:Type injector:Injector}">
        <Style.Resources>
            <math:MathConverter x:Key="MathConverter"/>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type injector:Injector}">
                    <StackPanel x:Name="Needle" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="Adapter"  
                                Width="{Binding ActualWidth,  ElementName=Needle, Converter={StaticResource MathConverter},
                                        ConverterParameter=x/10}"
                                Height="{Binding ActualHeight, ElementName=Needle, Converter={StaticResource MathConverter},
                                       ConverterParameter=x/50}"
                                Background="{TemplateBinding BorderBrush}"/>
                        <Grid>
                            <Border x:Name="Barrel"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Width="{Binding ActualWidth, ElementName=Needle}">
                                <Border.Height>
                                    <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="([0] - [1]) / 2">
                                        <Binding Path="ActualHeight" ElementName="Needle"/>
                                        <Binding Path="ActualHeight" ElementName="Adapter"/>
                                    </MultiBinding>
                                </Border.Height>
                            </Border>
                            <Canvas>
                                <StackPanel>
                                    <Canvas.Top>
                                        <MultiBinding Converter="{StaticResource MathConverter}"
                                                      ConverterParameter="([0] - [1]) / ([3] - [2]) * [4]">
                                            <Binding Path="ActualHeight" ElementName="Barrel"/>
                                            <Binding Path="PistonHeight" RelativeSource="{RelativeSource AncestorType=injector:Injector}"/>
                                            <Binding Path="Minimum" RelativeSource="{RelativeSource AncestorType=injector:Injector}"/>
                                            <Binding Path="Maximum" RelativeSource="{RelativeSource AncestorType=injector:Injector}"/>
                                            <Binding Path="Value" RelativeSource="{RelativeSource AncestorType=injector:Injector}"/>
                                        </MultiBinding>
                                    </Canvas.Top>
                                    <Border x:Name="Piston" Width="{Binding ActualWidth, ElementName=Needle}" 
                                            Height="{TemplateBinding PistonHeight}" Background="{TemplateBinding PistonBrush}"/>
                                    <Border x:Name="PlungerRod" Background="{TemplateBinding PlungerBrush}"
                                                Width="{Binding ActualWidth, ElementName=Barrel, Converter={StaticResource MathConverter},
             ConverterParameter=x/5}"
                                                Height="{Binding ActualHeight, ElementName=Barrel}"
                                                HorizontalAlignment="Center">
                                    </Border>
                                    <Ellipse Fill="{TemplateBinding PlungerBrush}" Width="{Binding ActualWidth, ElementName=Needle}" 
                                             Height="{Binding Width,  RelativeSource={RelativeSource Self},
        Converter={StaticResource MathConverter}, ConverterParameter=x/3}"></Ellipse>
                                </StackPanel>
                            </Canvas>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
